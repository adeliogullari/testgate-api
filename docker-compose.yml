version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "testgate_postgres", "-U", "admin"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_DB: testgate_postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    environment:
      - REDIS_PASSWORD=secret
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  redisinsight:
    container_name: redisinsight
    image: redis/redisinsight:latest
    restart: always
#    environment:
#      - REDISINSIGHT_REDIS_URI=redis://secret@redis:6379
    ports:
      - '5540:5540'
    volumes:
      - redisinsight_data:/data
    depends_on:
      - redis

  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:latest
    restart: always
    ports:
      - "9094:9094"
    volumes:
      - kafka_data:/bitnami
    environment:
    - KAFKA_CFG_NODE_ID=0
    - KAFKA_CFG_PROCESS_ROLES=controller,broker
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_CFG_KRAFT_MODE=true
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_CFG_LOG_RETENTION_BYTES=24

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  redisinsight_data:
  zookeeper_data:
  kafka_data:
